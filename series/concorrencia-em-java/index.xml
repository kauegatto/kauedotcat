<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Concorrencia em Java! on Kaue Gatto</title>
    <link>https://kaue.cat/series/concorrencia-em-java/</link>
    <description>Recent content in Concorrencia em Java! on Kaue Gatto</description>
    <image>
      <title>Kaue Gatto</title>
      <url>https://kaue.cat/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://kaue.cat/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 31 Mar 2024 19:16:03 +0000</lastBuildDate><atom:link href="https://kaue.cat/series/concorrencia-em-java/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Sincronização de Threads - DeadLocks, Zonas Críticas e Condições de Corrida</title>
      <link>https://kaue.cat/posts/concorrencia-java/desafios/</link>
      <pubDate>Sun, 31 Mar 2024 19:16:03 +0000</pubDate>
      
      <guid>https://kaue.cat/posts/concorrencia-java/desafios/</guid>
      <description>Os benefícios associados à programação paralela e concorrente são muitos, mas os perigos também!</description>
    </item>
    
    <item>
      <title>1. Concorrência em Java: Threads! Processando em Paralelo e Ganhando Throughput</title>
      <link>https://kaue.cat/posts/concorrencia-java/threads-java/</link>
      <pubDate>Fri, 29 Mar 2024 19:00:03 +0000</pubDate>
      
      <guid>https://kaue.cat/posts/concorrencia-java/threads-java/</guid>
      <description>Vamos explorar como fazer testes em java!</description>
    </item>
    
    <item>
      <title>Classes Thread Safe em Java -  Conceito e Introdução</title>
      <link>https://kaue.cat/posts/concorrencia-java/thread-safe/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kaue.cat/posts/concorrencia-java/thread-safe/</guid>
      <description>O JAVA nos traz diversos facilitadores para trabalharmos com concorrência em Java, aqui vamos descobir o que são as classes thread-safe.</description>
    </item>
    
    <item>
      <title>Executors, Thread Pools e Futures em Java</title>
      <link>https://kaue.cat/posts/concorrencia-java/executors-e-threadpools/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kaue.cat/posts/concorrencia-java/executors-e-threadpools/</guid>
      <description>Sabemos que threads são recursos caros, e isso é onde o *object pooling brilha*. E respondendo outra pergunta: cade o processamento assíncrono?</description>
    </item>
    
  </channel>
</rss>
